name: CI backend

on:
  push:
    paths:
      - backend/**
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.ref }}-backend
  cancel-in-progress: true

jobs:
  changes:
    name: Check changes files
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'

  lint:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' && (github.event_name == 'push' || !github.event.pull_request.draft) }}
    steps:
      - uses: actions/checkout@v3
      - name: lint
        run: docker compose -f docker-compose.test.yml run -e RAILS_ENV=test backend bundle exec rubocop

  test:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' && (github.event_name == 'push' || !github.event.pull_request.draft) }}
    steps:
      - uses: actions/checkout@v3
      - name: test
        run:
          POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
          POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
          POSTGRES_USER=${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          docker compose -f docker-compose.test.yml run
          -e RAILS_ENV=test
          -e DB_USERNAME=${{ vars.DB_USERNAME }}
          -e DB_HOST=${{ vars.DB_HOST }}
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          backend bash -c "bin/rails db:test:prepare && bundle exec rspec spec"
